{"version":3,"file":"static/js/998.f3a1ac85.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsFrom.jsx","components/ContactsList/ContactList.styled.jsx","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Form = styled.form`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;  \n   \n    align-items: center;\n    background-color: black;\n    border: 3px solid green; \npx\n solid green;\n    border-radius: 15px;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  margin-bottom: 15px;\n  font-size: 32px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 35px;\n  border-radius: 10px;\n`;\n\nexport const Add = styled.button`\n  display: block;\n  margin: 0px auto;\n  padding: 8px;\n  border: 2px solid rgb(8, 41, 17);\n  border-radius: 4px;\n  cursor: pointer;\n  color: rgb(222, 206, 169);\n  background-color: rgb(8, 41, 17);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    transform: scale(1.05);\n    background: rgb(104 91 101);\n    box-shadow: 5px 3px 10px 1px;\n  }\n`;\n\n\nexport const Box = styled.div `\npadding: 20px;\n    \n    display: flex;\n    width: 600px;\n    background-color: white;\n    flex-direction: column;\n    \n    align-items: center;\n    border: 3px solid black;\n    border-radius: 15px;\n\n`\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label, Form, Title,  Add } from './ContactsForm.styled';\nimport { Input } from '@chakra-ui/react';\nimport { addContacts } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Box } from './ContactsForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n   \n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.phone.value,\n    };\n   \n    if (contacts.find(({ name }) => name === contact.name)) {\n      alert('sorry');\n      return;\n    }\n    dispatch(addContacts(contact));\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Box>\n      <Label htmlFor={nameInputId}>\n        <Title>Name</Title>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameInputId}\n          width={'300px'}\n          borderColor={'#56bd77'}\n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        <Title>Number</Title>\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={numberInputId}\n          width={'300px'}\n          borderColor={'#56bd77'}\n        />\n      </Label>\n      <Add type=\"submit\">add contact</Add>\n      </Box>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\nposition: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\nwidth: 500px;\n\nmargin-left: 214px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  border: 2px solid rgb(8, 41, 17);\n  border-radius: 4px;\n  cursor: pointer;\n  color: rgb(222, 206, 169);\n  background-color: #252124;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    transform: scale(1.05);\n    background: rgb(104 91 101);\n    box-shadow: 5px 3px 10px 1px;\n  }\n`;\n\n\nexport const Loading = styled.div`\nmargin: 0 ;\ntop: 553px;\nleft:540px;\ncolor: red;\nfont-size: 25px;\n\n\n`\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import React from 'react';\nimport { Item, List, Button, Loading } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Text } from '@chakra-ui/react';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const contacts = useSelector(state => state.contacts.items);\n\n  const filterContact = useSelector(state => state.filters.filter);\n\n  const dispatch = useDispatch();\n\n  const delContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterContact)\n    );\n  };\n\n  const visible = getVisibleContacts();\n\n  return (\n    <>\n      <Loading>{isLoading && <p>Loading...</p>}</Loading>\n\n      <List>\n        {visible.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <Text fontSize={'30px'} color={'#041607'} fontWeight={'600'}>\n              {name}: {number}\n              </Text>\n             \n              \n              <Button type=\"button\" onClick={() => delContact(id)}>\n                delete\n              </Button>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import React from 'react';\nimport { Input } from '@chakra-ui/react';\nimport { Box, Title } from 'components/ContactsForm/ContactsForm.styled';\n\nimport {\n  Label, \n  Form,\n} from 'components/ContactsForm/ContactsForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <Form>\n      <Box>\n      <Label>\n        \n      <Title>Find contacts by name</Title>\n        <Input name=\"filter\" onChange={onChangeFilter} size={'sm'} width={'300px'} borderColor={'#56bd77'}/>\n      </Label>\n      </Box>\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactsForm/ContactsFrom';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n     <Filter/>\n      <ContactList />\n    </HelmetProvider>\n  );\n}\n"],"names":["Label","styled","Form","Title","Add","Box","ContactForm","contacts","useSelector","state","items","dispatch","useDispatch","nameInputId","nanoid","numberInputId","onSubmit","e","preventDefault","contact","name","target","elements","value","number","phone","find","alert","addContacts","reset","htmlFor","I","type","pattern","title","required","id","width","borderColor","Item","List","Button","Loading","Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","jsx","chakra","cx","__css","displayName","ContactList","isLoading","filterContact","filters","filter","visible","toLowerCase","includes","map","fontSize","color","fontWeight","onClick","deleteContact","delContact","Filter","onChange","filterContacts","size","Contacts","useEffect","fetchContacts"],"sourceRoot":""}