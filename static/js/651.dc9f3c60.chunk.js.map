{"version":3,"file":"static/js/651.dc9f3c60.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsFrom.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Form = styled.form`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 35px;\n  border-radius: 10px;\n`;\n\nexport const Add = styled.button`\n  display: block;\n  margin: 0px auto;\n  padding: 8px;\n  border: 2px solid rgb(8, 41, 17);\n  border-radius: 4px;\n  cursor: pointer;\n  color: rgb(222, 206, 169);\n  background-color: rgb(8, 41, 17);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    transform: scale(1.05);\n    background: rgb(104 91 101);\n    box-shadow: 5px 3px 10px 1px;\n  }\n`;\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label, Form, Title, Input, Add } from './ContactsForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n   \n    const contact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.phone.value,\n    };\n   \n    if (contacts.find(({ name }) => name === contact.name)) {\n      alert('sorry');\n      return;\n    }\n    dispatch(addContacts(contact));\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameInputId}>\n        <Title>Name</Title>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameInputId}\n        />\n      </Label>\n\n      <Label htmlFor={numberInputId}>\n        <Title>Number</Title>\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={numberInputId}\n        />\n      </Label>\n      <Add type=\"submit\">add contact</Add>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\nposition: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  width: 400px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  border: 2px solid rgb(8, 41, 17);\n  border-radius: 4px;\n  cursor: pointer;\n  color: rgb(222, 206, 169);\n  background-color: #252124;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    transform: scale(1.05);\n    background: rgb(104 91 101);\n    box-shadow: 5px 3px 10px 1px;\n  }\n`;\n\n\nexport const Loading = styled.div`\nmargin: 0 ;\ntop: 553px;\nleft:540px;\ncolor: red;\nfont-size: 25px;\n\n\n`\n","import React from 'react';\nimport { Item, List, Button, Loading } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const contacts = useSelector(state => state.contacts.items);\n\n  const filterContact = useSelector(state => state.filters.filter);\n\n  const dispatch = useDispatch();\n\n  const delContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterContact)\n    );\n  };\n\n  const visible = getVisibleContacts();\n\n  return (\n    <>\n      <Loading>{isLoading && <p>Loading...</p>}</Loading>\n\n      <List>\n        {visible.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              {name}: {number}\n              <Button type=\"button\" onClick={() => delContact(id)}>\n                delete\n              </Button>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import React from 'react';\n\nimport {\n  Label,\n  Input,\n  Form,\n} from 'components/ContactsForm/ContactsForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <Form>\n      <Label>\n        <h3>Find contacts by name</h3>\n        <Input name=\"filter\" onChange={onChangeFilter} />\n      </Label>\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactsForm/ContactsFrom';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n     <Filter/>\n      <ContactList />\n    </HelmetProvider>\n  );\n}\n"],"names":["Label","styled","Form","Title","Input","Add","ContactForm","contacts","useSelector","state","items","dispatch","useDispatch","nameInputId","nanoid","numberInputId","onSubmit","e","preventDefault","contact","name","target","elements","value","number","phone","find","alert","addContacts","reset","htmlFor","type","pattern","title","required","id","Item","List","Button","Loading","ContactList","isLoading","filterContact","filters","filter","visible","toLowerCase","includes","map","onClick","deleteContact","delContact","Filter","onChange","filterContacts","Contacts","useEffect","fetchContacts"],"sourceRoot":""}